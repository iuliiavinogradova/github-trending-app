{"ast":null,"code":"var _jsxFileName = \"/Users/iuliiavinogradova/Desktop/github-trending-frontend/src/RepositoriesList.js\",\n  _s = $RefreshSig$();\n// // src/RepositoriesList.js\n// import React, { useState, useEffect } from 'react';\n// // import { getRepositories } from './api'; // Import your API functions\n// // import { Link } from 'react-router-dom';\n// import './RepositoriesList.css';\n\n// import axios from 'axios';\n\n// const RepositoriesList = () => {\n//     const [repositories, setRepositories] = useState([]);\n\n//     const fetchRepositories = async () => {\n//         try {\n//             console.log('Fetching repositories...');\n//             const response = await axios.get('http://localhost:3000/repositories');\n//             console.log('Response:', response.data);\n//             setRepositories(response.data);\n//         } catch (error) {\n//             console.error('Error:', error.message);\n//         }\n//     };\n\n//     useEffect(() => {\n//         fetchRepositories();\n//     }, []);\n\n//     return (\n//         <div>\n//             <h1>Trending GitHub Repositories</h1>\n//             <button onClick={fetchRepositories}>Refresh</button>\n//             <ul>\n//                 {repositories.map(repo => (\n//                     <li key={repo.id}>\n//                         <strong>{repo.name}</strong> - {repo.stars} stars\n//                     </li>\n//                 ))}\n//             </ul>\n//         </div>\n//     );\n// };\n\n// // function RepositoriesList() {\n// //     const [repositories, setRepositories] = useState([]);\n\n// //     useEffect(() => {\n// //         // Fetch repositories from API and update state\n// //         getRepositories()\n// //             .then(response => setRepositories(response.data))\n// //             .catch(error => console.error('Error fetching repositories:', error));\n// //     }, []);\n\n// //     return (\n// //         <div className=\"repositories-list-container\">\n// //             <h2 className=\"section-title\">Repositories List</h2>\n// //             <ul className=\"repositories-list\">\n// //                 {repositories.map(repo => (\n// //                     <li key={repo.id} className=\"repository-item\">\n// //                         {/* Use the Link component to create a link */}\n// //                         <Link to={`/repository/${repo.id}`} className=\"repository-link\">\n// //                             <div className=\"repository-details\">\n// //                                 <h3 className=\"repository-name\">{repo.name}</h3>\n// //                                 <p className=\"repository-stars\">{repo.stars} stars</p>\n// //                             </div>\n// //                         </Link>\n// //                     </li>\n// //                 ))}\n// //             </ul>\n// //         </div>\n// //     );\n// // }\n\n// export default RepositoriesList;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport './RepositoriesList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RepositoriesList() {\n  _s();\n  const [repositories, setRepositories] = useState([]);\n  const fetchRepositories = async () => {\n    try {\n      console.log('Fetching repositories...');\n      const response = await axios.get('http://localhost:3000/repositories');\n      console.log('Response:', response.data);\n      setRepositories(response.data);\n    } catch (error) {\n      console.error('Error:', error.message);\n    }\n  };\n  useEffect(() => {\n    fetchRepositories();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"repositories-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"section-title\",\n      children: \"Trending GitHub Repositories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchRepositories,\n      children: \"Refresh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"repositories-list\",\n      children: repositories.map(repo => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"repository-item\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/repository/${repo.id}`,\n          className: \"repository-link\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: repo.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 29\n          }, this), \" - \", repo.stars, \" stars\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this)\n      }, repo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n}\n_s(RepositoriesList, \"BOCi1fzyIWTfYUJ6DGWtKZ5UKvY=\");\n_c = RepositoriesList;\nexport default RepositoriesList;\nvar _c;\n$RefreshReg$(_c, \"RepositoriesList\");","map":{"version":3,"names":["React","useState","useEffect","axios","Link","jsxDEV","_jsxDEV","RepositoriesList","_s","repositories","setRepositories","fetchRepositories","console","log","response","get","data","error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","repo","to","id","name","stars","_c","$RefreshReg$"],"sources":["/Users/iuliiavinogradova/Desktop/github-trending-frontend/src/RepositoriesList.js"],"sourcesContent":["// // src/RepositoriesList.js\n// import React, { useState, useEffect } from 'react';\n// // import { getRepositories } from './api'; // Import your API functions\n// // import { Link } from 'react-router-dom';\n// import './RepositoriesList.css';\n\n// import axios from 'axios';\n\n// const RepositoriesList = () => {\n//     const [repositories, setRepositories] = useState([]);\n\n//     const fetchRepositories = async () => {\n//         try {\n//             console.log('Fetching repositories...');\n//             const response = await axios.get('http://localhost:3000/repositories');\n//             console.log('Response:', response.data);\n//             setRepositories(response.data);\n//         } catch (error) {\n//             console.error('Error:', error.message);\n//         }\n//     };\n\n//     useEffect(() => {\n//         fetchRepositories();\n//     }, []);\n\n//     return (\n//         <div>\n//             <h1>Trending GitHub Repositories</h1>\n//             <button onClick={fetchRepositories}>Refresh</button>\n//             <ul>\n//                 {repositories.map(repo => (\n//                     <li key={repo.id}>\n//                         <strong>{repo.name}</strong> - {repo.stars} stars\n//                     </li>\n//                 ))}\n//             </ul>\n//         </div>\n//     );\n// };\n\n// // function RepositoriesList() {\n// //     const [repositories, setRepositories] = useState([]);\n\n// //     useEffect(() => {\n// //         // Fetch repositories from API and update state\n// //         getRepositories()\n// //             .then(response => setRepositories(response.data))\n// //             .catch(error => console.error('Error fetching repositories:', error));\n// //     }, []);\n\n// //     return (\n// //         <div className=\"repositories-list-container\">\n// //             <h2 className=\"section-title\">Repositories List</h2>\n// //             <ul className=\"repositories-list\">\n// //                 {repositories.map(repo => (\n// //                     <li key={repo.id} className=\"repository-item\">\n// //                         {/* Use the Link component to create a link */}\n// //                         <Link to={`/repository/${repo.id}`} className=\"repository-link\">\n// //                             <div className=\"repository-details\">\n// //                                 <h3 className=\"repository-name\">{repo.name}</h3>\n// //                                 <p className=\"repository-stars\">{repo.stars} stars</p>\n// //                             </div>\n// //                         </Link>\n// //                     </li>\n// //                 ))}\n// //             </ul>\n// //         </div>\n// //     );\n// // }\n\n// export default RepositoriesList;\n\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport './RepositoriesList.css';\n\nfunction RepositoriesList() {\n    const [repositories, setRepositories] = useState([]);\n\n    const fetchRepositories = async () => {\n        try {\n            console.log('Fetching repositories...');\n            const response = await axios.get('http://localhost:3000/repositories');\n            console.log('Response:', response.data);\n            setRepositories(response.data);\n        } catch (error) {\n            console.error('Error:', error.message);\n        }\n    };\n\n    useEffect(() => {\n        fetchRepositories();\n    }, []);\n\n    return (\n        <div className=\"repositories-list-container\">\n            <h2 className=\"section-title\">Trending GitHub Repositories</h2>\n            <button onClick={fetchRepositories}>Refresh</button>\n            <ul className=\"repositories-list\">\n                {repositories.map(repo => (\n                    <li key={repo.id} className=\"repository-item\">\n                        <Link to={`/repository/${repo.id}`} className=\"repository-link\">\n                            <strong>{repo.name}</strong> - {repo.stars} stars\n                        </Link>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nexport default RepositoriesList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}