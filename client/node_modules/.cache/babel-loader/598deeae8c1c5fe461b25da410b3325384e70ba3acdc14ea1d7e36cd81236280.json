{"ast":null,"code":"var _jsxFileName = \"/Users/iuliiavinogradova/Desktop/github-trending-frontend/src/RepositoryDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getRepositoryById } from './api'; // Import API functions\nimport './RepositoryDetails.css';\n// import axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RepositoryDetails() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [repository, setRepository] = useState(null);\n  console.log(id);\n  useEffect(() => {\n    // Fetch repository details from API and update state\n    getRepositoryById(id).then(response => setRepository(response.data)).catch(error => console.error('Error fetching repository details:', error));\n  }, [id]);\n\n  // const getRepositoryById = async (id) => {\n  //     try {\n  //         console.log(`Fetching repository...${repository}`);\n  //         const response = await axios.get(`http://localhost:3000/repository/${id}`);\n  //         console.log('Response:', response);\n  //         setRepository(response.data);\n  //     } catch (error) {\n  //         console.error('Error:', error.message);\n  //     }\n  // };\n\n  // useEffect(() => {\n  //     getRepositoryById(id);\n  // }, [id]);\n\n  if (!repository) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Loading...\", repository]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"repository-details-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"section-title\",\n      children: \"Repository Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"repository-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"repository-name\",\n        children: repository.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"repository-stars\",\n        children: [repository.stars, \" stars\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"repository-url\",\n        children: [\"URL: \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: repository.url,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: repository.url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(RepositoryDetails, \"iooidszFgdlqC9AeM246B6O+bd0=\", false, function () {\n  return [useParams];\n});\n_c = RepositoryDetails;\nexport default RepositoryDetails;\nvar _c;\n$RefreshReg$(_c, \"RepositoryDetails\");","map":{"version":3,"names":["React","useState","useEffect","useParams","getRepositoryById","jsxDEV","_jsxDEV","RepositoryDetails","_s","id","repository","setRepository","console","log","then","response","data","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","stars","href","url","target","rel","_c","$RefreshReg$"],"sources":["/Users/iuliiavinogradova/Desktop/github-trending-frontend/src/RepositoryDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getRepositoryById } from './api'; // Import API functions\nimport './RepositoryDetails.css';\n// import axios from 'axios';\n\nfunction RepositoryDetails() {\n    const { id } = useParams();\n    const [repository, setRepository] = useState(null);\n\n    console.log(id)\n\n    useEffect(() => {\n        // Fetch repository details from API and update state\n        getRepositoryById(id)\n            .then(response => setRepository(response.data))\n            .catch(error => console.error('Error fetching repository details:', error));\n    }, [id]);\n\n    // const getRepositoryById = async (id) => {\n    //     try {\n    //         console.log(`Fetching repository...${repository}`);\n    //         const response = await axios.get(`http://localhost:3000/repository/${id}`);\n    //         console.log('Response:', response);\n    //         setRepository(response.data);\n    //     } catch (error) {\n    //         console.error('Error:', error.message);\n    //     }\n    // };\n\n    // useEffect(() => {\n    //     getRepositoryById(id);\n    // }, [id]);\n\n    if (!repository) {\n        return <div>Loading...{repository}</div>;\n    }\n\n\n\n    return (\n        <div className=\"repository-details-container\">\n            <h2 className=\"section-title\">Repository Details</h2>\n            <div className=\"repository-details\">\n                <h3 className=\"repository-name\">{repository.name}</h3>\n                <p className=\"repository-stars\">{repository.stars} stars</p>\n                <p className=\"repository-url\">\n                    URL: <a href={repository.url} target=\"_blank\" rel=\"noopener noreferrer\">{repository.url}</a>\n                </p>\n            </div>\n        </div>\n    );\n}\n\nexport default RepositoryDetails;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,iBAAiB,QAAQ,OAAO,CAAC,CAAC;AAC3C,OAAO,yBAAyB;AAChC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAElDW,OAAO,CAACC,GAAG,CAACJ,EAAE,CAAC;EAEfP,SAAS,CAAC,MAAM;IACZ;IACAE,iBAAiB,CAACK,EAAE,CAAC,CAChBK,IAAI,CAACC,QAAQ,IAAIJ,aAAa,CAACI,QAAQ,CAACC,IAAI,CAAC,CAAC,CAC9CC,KAAK,CAACC,KAAK,IAAIN,OAAO,CAACM,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC,CAAC;EACnF,CAAC,EAAE,CAACT,EAAE,CAAC,CAAC;;EAER;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA,IAAI,CAACC,UAAU,EAAE;IACb,oBAAOJ,OAAA;MAAAa,QAAA,GAAK,YAAU,EAACT,UAAU;IAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC5C;EAIA,oBACIjB,OAAA;IAAKkB,SAAS,EAAC,8BAA8B;IAAAL,QAAA,gBACzCb,OAAA;MAAIkB,SAAS,EAAC,eAAe;MAAAL,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrDjB,OAAA;MAAKkB,SAAS,EAAC,oBAAoB;MAAAL,QAAA,gBAC/Bb,OAAA;QAAIkB,SAAS,EAAC,iBAAiB;QAAAL,QAAA,EAAET,UAAU,CAACe;MAAI;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACtDjB,OAAA;QAAGkB,SAAS,EAAC,kBAAkB;QAAAL,QAAA,GAAET,UAAU,CAACgB,KAAK,EAAC,QAAM;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC5DjB,OAAA;QAAGkB,SAAS,EAAC,gBAAgB;QAAAL,QAAA,GAAC,OACrB,eAAAb,OAAA;UAAGqB,IAAI,EAAEjB,UAAU,CAACkB,GAAI;UAACC,MAAM,EAAC,QAAQ;UAACC,GAAG,EAAC,qBAAqB;UAAAX,QAAA,EAAET,UAAU,CAACkB;QAAG;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7F,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACf,EAAA,CA9CQD,iBAAiB;EAAA,QACPJ,SAAS;AAAA;AAAA4B,EAAA,GADnBxB,iBAAiB;AAgD1B,eAAeA,iBAAiB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}