{"ast":null,"code":"var _jsxFileName = \"/Users/iuliiavinogradova/Desktop/github-trending-frontend/src/App.js\",\n  _s = $RefreshSig$();\n// // import logo from './logo.svg';\n// import './App.css';\n// import React from 'react';\n// import { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\n// import RepositoriesList from './RepositoriesList';\n// import RepositoryDetails from './RepositoryDetails';\n\n// function App() {\n//   return (\n//     <Router>\n//       <nav>\n//         <ul>\n//           <li><Link to=\"/\">Home</Link></li>\n//           <li><Link to=\"/repositories\">Repositories</Link></li>\n//           <li><Link to=\"/search\">Search</Link></li>\n//           <li><Link to=\"/sync\">Sync</Link></li>\n//         </ul>\n//       </nav>\n//       <div>\n//         <h1>Github Trending App</h1>\n//         <Routes>\n//           <Route exact path=\"/\" component={RepositoriesList} />\n//           <Route path=\"/repository/:id\" component={RepositoryDetails} />\n//         </Routes>\n//       </div>\n//     </Router>\n//   );\n// }\n\n// export default App;\n\n// // {/* <div className=\"App\">\n// //           <header className=\"App-header\">\n// //             <img src={logo} className=\"App-logo\" alt=\"logo\" />\n// //             <p>\n// //               Edit <code>src/App.js</code> and save to reload.\n// //             </p>\n// //             <a\n// //               className=\"App-link\"\n// //               href=\"https://reactjs.org\"\n// //               target=\"_blank\"\n// //               rel=\"noopener noreferrer\"\n// //             >\n// //               Learn React\n// //             </a>\n// //           </header>\n// //         </div> */}\n\n// This is a simplified example. You should set up proper project structure and use components.\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [repositories, setRepositories] = useState([]);\n  const fetchRepositories = async () => {\n    try {\n      const response = await axios.get('http://localhost:3000/repositories');\n      setRepositories(response.data);\n    } catch (error) {\n      console.error('Error:', error.message);\n    }\n  };\n  useEffect(() => {\n    fetchRepositories();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Trending GitHub Repositories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchRepositories,\n      children: \"Refresh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: repositories.map(repo => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: repo.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), \" - \", repo.stars, \" stars\"]\n      }, repo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"BOCi1fzyIWTfYUJ6DGWtKZ5UKvY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","repositories","setRepositories","fetchRepositories","response","get","data","error","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","repo","name","stars","id","_c","$RefreshReg$"],"sources":["/Users/iuliiavinogradova/Desktop/github-trending-frontend/src/App.js"],"sourcesContent":["// // import logo from './logo.svg';\n// import './App.css';\n// import React from 'react';\n// import { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\n// import RepositoriesList from './RepositoriesList';\n// import RepositoryDetails from './RepositoryDetails';\n\n// function App() {\n//   return (\n//     <Router>\n//       <nav>\n//         <ul>\n//           <li><Link to=\"/\">Home</Link></li>\n//           <li><Link to=\"/repositories\">Repositories</Link></li>\n//           <li><Link to=\"/search\">Search</Link></li>\n//           <li><Link to=\"/sync\">Sync</Link></li>\n//         </ul>\n//       </nav>\n//       <div>\n//         <h1>Github Trending App</h1>\n//         <Routes>\n//           <Route exact path=\"/\" component={RepositoriesList} />\n//           <Route path=\"/repository/:id\" component={RepositoryDetails} />\n//         </Routes>\n//       </div>\n//     </Router>\n//   );\n// }\n\n// export default App;\n\n// // {/* <div className=\"App\">\n// //           <header className=\"App-header\">\n// //             <img src={logo} className=\"App-logo\" alt=\"logo\" />\n// //             <p>\n// //               Edit <code>src/App.js</code> and save to reload.\n// //             </p>\n// //             <a\n// //               className=\"App-link\"\n// //               href=\"https://reactjs.org\"\n// //               target=\"_blank\"\n// //               rel=\"noopener noreferrer\"\n// //             >\n// //               Learn React\n// //             </a>\n// //           </header>\n// //         </div> */}\n\n// This is a simplified example. You should set up proper project structure and use components.\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst App = () => {\n  const [repositories, setRepositories] = useState([]);\n\n  const fetchRepositories = async () => {\n    try {\n      const response = await axios.get('http://localhost:3000/repositories');\n      setRepositories(response.data);\n    } catch (error) {\n      console.error('Error:', error.message);\n    }\n  };\n\n  useEffect(() => {\n    fetchRepositories();\n  }, []);\n\n  return (\n    <div>\n      <h1>Trending GitHub Repositories</h1>\n      <button onClick={fetchRepositories}>Refresh</button>\n      <ul>\n        {repositories.map(repo => (\n          <li key={repo.id}>\n            <strong>{repo.name}</strong> - {repo.stars} stars\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMS,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,oCAAoC,CAAC;MACtEH,eAAe,CAACE,QAAQ,CAACE,IAAI,CAAC;IAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAACE,OAAO,CAAC;IACxC;EACF,CAAC;EAEDd,SAAS,CAAC,MAAM;IACdQ,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrChB,OAAA;MAAQiB,OAAO,EAAEZ,iBAAkB;MAAAO,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACpDhB,OAAA;MAAAY,QAAA,EACGT,YAAY,CAACe,GAAG,CAACC,IAAI,iBACpBnB,OAAA;QAAAY,QAAA,gBACEZ,OAAA;UAAAY,QAAA,EAASO,IAAI,CAACC;QAAI;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,OAAG,EAACG,IAAI,CAACE,KAAK,EAAC,QAC7C;MAAA,GAFSF,IAAI,CAACG,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACd,EAAA,CA7BID,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AA+BT,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}